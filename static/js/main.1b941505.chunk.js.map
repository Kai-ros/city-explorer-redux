{"version":3,"sources":["components/header.js","components/search-form.js","components/weather-result.js","components/movies-result.js","components/yelp-result.js","components/hiking-result.js","components/search-results.js","components/map.js","components/main.js","components/app.js","serviceWorker.js","index.js"],"names":["Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","react_default","a","createElement","react","Component","SearchForm","handleURLChange","event","setState","view","locationValue","urlValue","target","value","handleURLSubmit","preventDefault","url","handleLocationChange","handleLocationSubmit","type","onChange","className","onClick","WeatherResult","resultsData","map","element","index","key","time","forecast","MoviesResult","Math","random","title","released_on","total_votes","average_votes","popularity","src","image_url","alt","overview","YelpResult","href","name","rating","price","HikingResult","trail_url","location","length","condition_date","condition_time","conditions","stars","star_votes","summary","SearchResults","weather_result_WeatherResult","weather","yelp_result_YelpResult","yelp","movies_result_MoviesResult","movies","hiking_result_HikingResult","hiking","Map","defineProperty","id","width","height","concat","formatted_query","frameBorder","scrolling","marginHeight","marginWidth","Main","locationData","superagent","get","then","response","body","query","data","results","newState","console","log","search_query","latitude","longitude","created_at","search_form_SearchForm","map_Map","search_results_SearchResults","App","getAPIKey","REACT_APP_GEOCODE_API_KEY","backEndUrl","googleResults","apiResults","weathers","events","header_Header","main_Main","Boolean","window","hostname","match","ReactDOM","render","app_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1b941505.chunk.js","sourcesContent":["import React, { Component, Fragment } from \"react\";\n\nimport \"../reset.css\";\nimport \"../App.css\";\n\nexport default class Header extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <h1>City Explorer</h1>\n        <p>\n          Enter a location below to learn about the weather, events,\n          restaurants, movies filmed there, and more!\n        </p>\n      </Fragment>\n    );\n  }\n}\n","import React, { Component, Fragment } from \"react\";\n\nimport \"../reset.css\";\nimport \"../App.css\";\n\nexport default class SearchForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      view: \"initial\",\n      locationValue: \"\",\n      urlValue: \"\"\n    };\n  }\n\n  handleURLChange = event => {\n    this.setState({\n      view: this.state.view,\n      locationValue: this.state.locationValue,\n      urlValue: event.target.value\n    });\n  };\n\n  handleURLSubmit = event => {\n    event.preventDefault();\n    this.props.handleURLSubmit(this.state.urlValue);\n\n    this.setState({\n      view: \"location\",\n      locationValue: this.state.locationValue,\n      url: this.state.urlValue\n    });\n  };\n\n  handleLocationChange = event => {\n    this.setState({\n      view: this.state.view,\n      locationValue: event.target.value,\n      url: this.state.url\n    });\n  };\n\n  handleLocationSubmit = event => {\n    event.preventDefault();\n    this.props.handleLocationSubmit(this.state.locationValue);\n\n    this.setState({\n      view: \"location\",\n      locationValue: this.state.locationValue,\n      url: this.state.urlValue\n    });\n  };\n\n  render() {\n    if (this.state.view === \"initial\") {\n      return (\n        <Fragment>\n          <form>\n            <input\n              type=\"text\"\n              onChange={this.handleURLChange}\n              value={this.state.urlValue}\n            />\n            <button className=\"button\" onClick={this.handleURLSubmit}>\n              Submit\n            </button>\n          </form>\n        </Fragment>\n      );\n    } else {\n      return (\n        <Fragment>\n          <form>\n            <input\n              type=\"text\"\n              onChange={this.handleLocationChange}\n              value={this.state.locationValue}\n            />\n            <button className=\"button\" onClick={this.handleLocationSubmit}>\n              Submit\n            </button>\n          </form>\n        </Fragment>\n      );\n    }\n  }\n}\n\n/* <p id=\"counter\">{this.state.count}</p> */\n","import React, { Component, Fragment } from \"react\";\n\nimport \"../reset.css\";\nimport \"../App.css\";\n\nexport default class WeatherResult extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <section>\n          <h3>Results from the Dark Sky API</h3>\n          <ul className=\"weather-results\">\n            {this.props.resultsData.map((element, index) => {\n              return (\n                <li key={index}>\n                  The forecast for {element.time} is: {element.forecast}\n                </li>\n              );\n            })}\n          </ul>\n        </section>\n      </Fragment>\n    );\n  }\n}\n","import React, { Component, Fragment } from \"react\";\n\nimport \"../reset.css\";\nimport \"../App.css\";\n\nexport default class MoviesResult extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <section className=\"movie-container\">\n          <h3>Results from The Movie DB API</h3>\n          <ul className=\"movies-results\">\n            {this.props.resultsData.map(element => {\n              return (\n                <li key={Math.random()}>\n                  <p>\n                    <span>{element.title}</span> was relased on{\" \"}\n                    {element.released_on}. Out of {element.total_votes} total\n                    votes, {element.title} has an average vote of{\" \"}\n                    {element.average_votes} and a popularity score of{\" \"}\n                    {element.popularity}.\n                  </p>\n                  <img src={element.image_url} alt=\"\" />\n                  <p>{element.overview}</p>\n                </li>\n              );\n            })}\n          </ul>\n        </section>\n      </Fragment>\n    );\n  }\n}\n","import React, { Component, Fragment } from \"react\";\n\nimport \"../reset.css\";\nimport \"../App.css\";\n\nexport default class YelpResult extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <section className=\"yelp-container\">\n          <h3>Results from the Yelp API</h3>\n          <ul className=\"yelp-results\">\n            {this.props.resultsData.map(element => {\n              return (\n                <li key={Math.random()}>\n                  <a href={element.url}>{element.name}</a>\n                  <p>\n                    The average rating is {element.rating} out of 5 and the\n                    average cost is {element.price} out of 4\n                  </p>\n                  <img src={element.image_url} alt=\"\" />\n                </li>\n              );\n            })}\n          </ul>\n        </section>\n      </Fragment>\n    );\n  }\n}\n","import React, { Component, Fragment } from \"react\";\n\nimport \"../reset.css\";\nimport \"../App.css\";\n\nexport default class HikingResult extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <section>\n          <h3>Results from the Hiking Project API</h3>\n          <ul className=\"trails-results\">\n            {this.props.resultsData.map(element => {\n              return (\n                <div key={Math.random()}>\n                  <p>\n                    Hike Name: <a href={element.trail_url}>{element.name}</a>,\n                    Location: {element.location}, Distance: {element.length}{\" \"}\n                    miles\n                  </p>\n                  <p>\n                    On {element.condition_date} at {element.condition_time},\n                    trail conditions were reported as: {element.conditions}\n                  </p>\n                  <p>\n                    This trail has a rating of {element.stars} stars (out of{\" \"}\n                    {element.star_votes} votes)\n                  </p>\n                  <p>{element.summary}</p>\n                </div>\n              );\n            })}\n          </ul>\n        </section>\n      </Fragment>\n    );\n  }\n}\n","import React, { Component, Fragment } from \"react\";\n\nimport WeatherResult from \"./weather-result.js\";\nimport MoviesResult from \"./movies-result.js\";\nimport YelpResult from \"./yelp-result.js\";\nimport HikingResult from \"./hiking-result.js\";\n\nimport \"../reset.css\";\nimport \"../App.css\";\n\nexport default class SearchResults extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <div className=\"column-container\">\n          <WeatherResult resultsData={this.props.resultsData.weather} />\n          <YelpResult resultsData={this.props.resultsData.yelp} />\n          <section>EVENTS TBD</section>\n          <MoviesResult resultsData={this.props.resultsData.movies} />\n          <HikingResult resultsData={this.props.resultsData.hiking} />\n        </div>\n      </Fragment>\n    );\n  }\n}\n","import React, { Component, Fragment } from \"react\";\n\nimport \"../reset.css\";\nimport \"../App.css\";\n\nexport default class Map extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <div\n          id=\"map\"\n          className=\"hide\"\n          src=\"\"\n          alt=\"Map of search query\"\n          className=\"mapouter\"\n        >\n          <div className=\"gmap_canvas\">\n            <iframe\n              width=\"600\"\n              height=\"500\"\n              id=\"gmap_canvas\"\n              src={`https://maps.google.com/maps?q=${\n                this.props.resultsData.formatted_query\n              }&t=&z=13&ie=UTF8&iwloc=&output=embed`}\n              frameBorder=\"0\"\n              scrolling=\"no\"\n              marginHeight=\"0\"\n              marginWidth=\"0\"\n            />\n            <a href=\"https://www.pureblack.de\" />\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n","import React, { Component, Fragment } from \"react\";\nimport superagent from \"superagent\";\n\nimport SearchForm from \"./search-form.js\";\nimport SearchResults from \"./search-results.js\";\nimport Map from \"./map.js\";\n\nimport \"../reset.css\";\nimport \"../App.css\";\n\nexport default class Main extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      url: \"\",\n      view: \"initial\",\n      location: \"\",\n      locationData: {\n        id: 1,\n        search_query: \"\",\n        formatted_query: \"\",\n        latitude: \"\",\n        longitude: \"\",\n        created_at: null\n      },\n      resultsData: {\n        weather: [{ forecast: \"\", time: \"\" }],\n        movies: [\n          {\n            title: \"\",\n            released_on: \"\",\n            total_votes: \"\",\n            average_votes: \"\",\n            popularity: \"\",\n            image_url: \"\",\n            overview: \"\"\n          }\n        ],\n        yelp: [{ url: \"\", name: \"\", rating: \"\", price: \"\", image_url: \"\" }],\n        hiking: [\n          {\n            trail_url: \"\",\n            name: \"\",\n            location: \"\",\n            length: \"\",\n            condition_date: \"\",\n            condition_time: \"\",\n            conditions: \"\",\n            stars: \"\",\n            star_votes: \"\",\n            summary: \"\"\n          }\n        ]\n      }\n    };\n  }\n\n  handleURLSubmit = url => {\n    this.setState({\n      url: url,\n      view: this.state.view,\n      location: this.state.location,\n      locationData: this.state.locationData,\n      resultsData: this.state.resultsData\n    });\n  };\n\n  handleLocationSubmit = location => {\n    superagent\n      .get(`${this.state.url}/location?data=${location}`)\n      .then(response => {\n        this.setState({\n          url: this.state.url,\n          view: \"results\",\n          location: location,\n          locationData: response.body\n        });\n        superagent\n          .get(`${this.state.url}/weather`)\n          .query({ data: response.body })\n          .then(results => {\n            let newState = this.state;\n            newState.resultsData.weather = results.body;\n            this.setState(newState);\n          })\n          .then(() => {\n            superagent\n              .get(`${this.state.url}/movies`)\n              .query({ data: response.body })\n              .then(results => {\n                let newState = this.state;\n                newState.resultsData.movies = results.body;\n                this.setState(newState);\n              });\n          })\n          .then(() => {\n            superagent\n              .get(`${this.state.url}/yelp`)\n              .query({ data: response.body })\n              .then(results => {\n                let newState = this.state;\n                newState.resultsData.yelp = results.body;\n                this.setState(newState);\n              });\n          })\n          .then(() => {\n            superagent\n              .get(`${this.state.url}/trails`)\n              .query({ data: response.body })\n              .then(results => {\n                let newState = this.state;\n                newState.resultsData.hiking = results.body;\n                this.setState(newState);\n              });\n          })\n          .then(console.log(\"this.state: \", this.state));\n      });\n  };\n\n  render() {\n    if (this.state.view === \"initial\") {\n      return (\n        <Fragment>\n          <SearchForm\n            handleURLSubmit={this.handleURLSubmit}\n            handleLocationSubmit={this.handleLocationSubmit}\n          />\n        </Fragment>\n      );\n    } else {\n      return (\n        <Fragment>\n          <SearchForm />\n          <Map resultsData={this.state.locationData} />\n          <SearchResults resultsData={this.state.resultsData} />\n        </Fragment>\n      );\n    }\n  }\n}\n","import React, { Component, Fragment } from \"react\";\n\nimport Header from \"./header.js\";\nimport Main from \"./main.js\";\n\nimport \"../reset.css\";\nimport \"../App.css\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      backEndUrl: \"\",\n      REACT_APP_GEOCODE_API_KEY: \"\",\n      googleResults: {},\n      apiResults: {\n        weathers: [],\n        yelp: [],\n        hiking: [],\n        events: [],\n        movies: []\n      }\n    };\n  }\n\n  getAPIKey = value => {\n    this.setState({ REACT_APP_GEOCODE_API_KEY: value });\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <Header />\n        <Main />\n      </Fragment>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/app\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}